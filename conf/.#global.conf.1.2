#!perl
################################################################################
# WeBWorK Online Homework Delivery System
# Copyright © 2000-2006 The WeBWorK Project, http://openwebwork.sf.net/
# $CVSHeader: ww_question_server/conf/global.conf,v 1.2 2007/07/12 19:18:18 mleventi Exp $
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of either: (a) the GNU General Public License as published by the
# Free Software Foundation; either version 2, or (at your option) any later
# version, or (b) the "Artistic License" which comes with this package.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See either the GNU General Public License or the
# Artistic License for more details.
################################################################################

################################################################################
# ProblemServer options
################################################################################

$problemServer{host}	= "https://devel.webwork.rochester.edu:8002/";

$problemServer{wsdl} 	= "https://devel.webwork.rochester.edu:8002/problemserver_wsdl";

$problemServer{rpc} 	= "http://devel.webwork.rochester.edu:8002/problemserver_rpc";

$pg_dir              	= "/home/mleventi/webwork_projects/webwork/pg";


################################################################################
# System-wide locations (directories and URLs)
################################################################################


# The root URL (usually /webwork2), set by <Location> in Apache configuration.
$problemServerURLs{root}          = "$problemServer{host}/problemserver";
$problemServerDirs{root}	  = "/home/mleventi/webwork_projects/problem_server";

# Contains non-web-accessible temporary files, such as TeX working directories.
$problemServerDirs{tmp}           = "$problemServerDirs{root}/tmp";

# Location of system-wide web-accessible files, such as equation images, and
# help files.
$problemServerDirs{htdocs}        = "$problemServerDirs{root}/htdocs";
$problemServerURLs{htdocs}        = "$problemServer{host}/problemserver_files";

# Location of web-accessible temporary files, such as equation images.
$problemServerDirs{htdocs_temp}   = "$problemServerDirs{htdocs}/tmp";
$problemServerURLs{htdocs_temp}   = "$problemServerURLs{htdocs}/tmp";

# Location of cached equation images.
$problemServerDirs{equationCache} = "$problemServerDirs{htdocs_temp}/equations";
$problemServerURLs{equationCache} = "$problemServerURLs{htdocs_temp}/equations";

# Location of jsMath script, used for the jsMath display mode.
$problemServerURLs{jsMath}        = "$problemServerURLs{htdocs}/jsMath/jsMath-ww.js";

# Location of ASCIIMathML script, used for the asciimath display mode.
$problemServerURLs{asciimath}     = "$problemServerURLs{htdocs}/ASCIIMathML/ASCIIMathML.js";

# Location of LaTeXMathML script, used for the LaTeXMathML display mode.
$problemServerURLs{LaTeXMathML}   = "$problemServerURLs{htdocs}/LaTeXMathML/LaTeXMathML.js";

################################################################################
# Paths to external programs
################################################################################


# equation rendering/hardcopy utiltiies
$externalPrograms{latex}    = "/usr/bin/latex";
$externalPrograms{pdflatex} = "/usr/bin/pdflatex --shell-escape";
$externalPrograms{dvipng}   = "/usr/bin/dvipng";
$externalPrograms{tth}      = "/usr/bin/tth";

# NetPBM - basic image manipulation utilities
# Most sites only need to configure $netpbm_prefix.
my $netpbm_prefix = "/usr/bin";
$externalPrograms{giftopnm} = "$netpbm_prefix/giftopnm";
$externalPrograms{ppmtopgm} = "$netpbm_prefix/ppmtopgm";
$externalPrograms{pnmtops}  = "$netpbm_prefix/pnmtops";
$externalPrograms{pnmtopng} = "$netpbm_prefix/pnmtopng";
$externalPrograms{pngtopnm} = "$netpbm_prefix/pngtopnm";

# url checker
$externalPrograms{checkurl} = "/usr/local/bin/lwp-request -mHEAD "; # or "/usr/local/bin/w3c -head "

# image conversions utiltiies
# the source file is given on stdin, and the output expected on stdout.
$externalPrograms{gif2eps} = "$externalPrograms{giftopnm} | $externalPrograms{ppmtopgm} | $externalPrograms{pnmtops} -noturn 2>/dev/null";
$externalPrograms{png2eps} = "$externalPrograms{pngtopnm} | $externalPrograms{ppmtopgm} | $externalPrograms{pnmtops} -noturn 2>/dev/null";
$externalPrograms{gif2png} = "$externalPrograms{giftopnm} | $externalPrograms{pnmtopng}";



################################################################################
# PG subsystem options
################################################################################

# List of enabled display modes. Comment out any modes you don't wish to make
# available for use.
$pg{displayModes} = [
	"plainText",     # display raw TeX for math expressions
	"formattedText", # format math expressions using TtH
	"images",        # display math expressions as images generated by dvipng
	"jsMath",        # render TeX math expressions on the client side using jsMath
	"asciimath",     # render TeX math expressions on the client side using ASCIIMathML
	"LaTeXMathML",   # render TeX math expressions on the client side using LaTeXMathML
];

#### Default settings for the PG translator

# Default display mode. Should be listed above.
$pg{options}{displayMode}        = "plainText";

# The default grader to use, if a problem doesn't specify.
$pg{options}{grader}             = "avg_problem_grader";

# Fill in answer blanks with the student's last answer by default?
$pg{options}{showOldAnswers}     = 1;

# Show correct answers (when allowed) by default?
$pg{options}{showCorrectAnswers} = 0;

# Show hints (when allowed) by default?
$pg{options}{showHints}          = 0;

# Show solutions (when allowed) by default?
$pg{options}{showSolutions}      = 0;

# Catch translation warnings internally by default? (We no longer need to do
# this, since there is a global warnings handler. So this should be off.)
$pg{options}{catchWarnings}      = 1;


##### Settings for various display modes

# "images" mode has several settings:
$pg{displayModeOptions}{images} = {
	# Determines the method used to align images in output. Can be
	# "baseline", "absmiddle", or "mysql".
	dvipng_align => 'absmiddle',
};

$pg{displayModeOptions}{jsMath} = {
	reportMissingFonts => 0,       # set to 1 to allow the missing font message
	missingFontMessage => undef,   # set to an HTML string to replace the missing font message
	noImageFonts => 0,             # set to 1 if you didn't install the jsMath image fonts
	processDoubleClicks => 1,      # set to 0 to disable double-click on math to get TeX source
};

##### Directories used by PG

# The root of the PG directory tree (from pg_root in Apache config).
$pg{directories}{root}   = "$pg_dir";
$pg{directories}{lib}    = "$pg{directories}{root}/lib";
$pg{directories}{macros} = "$pg{directories}{root}/macros";

#
#  The macro file search path.  Each directory in this list is seached
#  (in this order) by loadMacros() when it looks for a .pl file.
#
$pg{directories}{macrosPath} = [
   ".",                     # search the problem file's directory
   $courseDirs{macros},
   $pg{directories}{macros},
   "/home/mleventi/webwork_projects/webwork/problibs/union_problib/macros",
];

# The applet search path. If a full URL is given, it is used unmodified. If an
# absolute path is given, the URL of the local server is prepended to it.
#
# For example, if an item is "/math/applets",
# and the local server is  "https://math.yourschool.edu",
# then the URL "https://math.yourschool.edu/math/applets" will be used.
#
$pg{directories}{appletPath} = [    # paths to search for applets (requires full url)
	"$webworkURLs{htdocs}/applets",
	"$courseURLs{html}/applets",
];

##### "Special" PG environment variables. (Stuff that doesn't fit in anywhere else.)

# Users for whom to print the file name of the PG file being processed.
$pg{specialPGEnvironmentVars}{PRINT_FILE_NAMES_FOR} = [ "professor", ];

# Locations of CAPA resources. (Only necessary if you need to use converted CAPA
# problems.)
$pg{specialPGEnvironmentVars}{CAPA_Tools}             = "$courseDirs{macros}/CAPA_Tools/",
$pg{specialPGEnvironmentVars}{CAPA_MCTools}           = "$courseDirs{macros}/CAPA_MCTools/",
$pg{specialPGEnvironmentVars}{CAPA_GraphicsDirectory} = "$courseDirs{html}/CAPA_Graphics/",
$pg{specialPGEnvironmentVars}{CAPA_Graphics_URL}      = "$courseURLs{html}/CAPA_Graphics/",

# Size in pixels of dynamically-generated images, i.e. graphs.
$pg{specialPGEnvironmentVars}{onTheFlyImageSize}      = 400,

# To disable the Parser-based versions of num_cmp and fun_cmp, and use the
# original versions instead, set this value to 1.
$pg{specialPGEnvironmentVars}{useOldAnswerMacros} = 0;

# Strings to insert at the start and end of the body of a problem
#  (at beginproblem() and ENDDOCUMENT) in various modes.  More display modes
#  can be added if different behaviours are desired (e.g., HTML_dpng,
#  HTML_asciimath, etc.).  These parts are not used in the Library browser.

$pg{specialPGEnvironmentVars}{problemPreamble} = { TeX => '', HTML=> '' };
$pg{specialPGEnvironmentVars}{problemPostamble} = { TeX => '', HTML=>'' };

# To have the problem body indented and boxed, uncomment:

# $pg{specialPGEnvironmentVars}{problemPreamble}{HTML} = '<BLOCKQUOTE>
#     <TABLE BORDER=1 CELLSPACING=1 CELLPADDING=15 BGCOLOR=#E8E8E8><TR><TD>';
# $pg{specialPGEnvironmentVars}{problemPostamble}{HTML} = '</TD></TR></TABLE>
#     </BLOCKQUOTE>';

##### PG modules to load

# The first item of each list is the module to load. The remaining items are
# additional packages to import.

${pg}{modules} = [
	[qw(DynaLoader)],
	[qw(Exporter)],
	[qw(GD)],

	[qw(AlgParser AlgParserWithImplicitExpand Expr ExprWithImplicitExpand utf8)],
	[qw(AnswerHash AnswerEvaluator)],
	[qw(WWPlot)], # required by Circle (and others)
	[qw(Circle)],
	[qw(Complex)],
	[qw(Complex1)],
	[qw(Distributions)],
	[qw(Fraction)],
	[qw(Fun)],
	[qw(Hermite)],
	[qw(Label)],
	[qw(List)],
	[qw(Match)],
	[qw(MatrixReal1)], # required by Matrix
	[qw(Matrix)],
	[qw(Multiple)],
	[qw(PGrandom)],
	[qw(Regression)],
	[qw(Select)],
	[qw(Units)],
	[qw(VectorField)],
	[qw(Parser Value)],
	[qw(Parser::Legacy)],
];

##### Answer evaluator defaults

$pg{ansEvalDefaults} = {
	functAbsTolDefault            => .001,
	functLLimitDefault            => .0000001,
	functMaxConstantOfIntegration => 1E8,
	functNumOfPoints              => 3,
	functRelPercentTolDefault     => .1,
	functULimitDefault            => .9999999,
	functVarDefault               => "x",
	functZeroLevelDefault         => 1E-14,
	functZeroLevelTolDefault      => 1E-12,
	numAbsTolDefault              => .001,
	numFormatDefault              => "",
	numRelPercentTolDefault       => .1,
	numZeroLevelDefault           => 1E-14,
	numZeroLevelTolDefault        => 1E-12,
	useBaseTenLog                 => 0,
	defaultDisplayMatrixStyle     => "[s]",
};


################################################################################
#Default Problem options
################################################################################

#define the problem environment

#psvn
$problemEnviron{psvn}               	= "1";
$problemEnviron{psvnNumber}         	= $problemEnviron{psvn};

#problemNum
$problemEnviron{probNum}            	= "1";
$problemEnviron{questionNumber}     	= $problemEnviron{probNum};

#fileName
$problemEnviron{fileName}           	= "ServerFile";
$problemEnviron{probFileName}       	= $problemEnviron{fileName};

#seed
$problemEnviron{problemSeed}        	= "1";

#displayMode
$problemEnviron{displayMode}        	= "HTML";
$problemEnviron{languageMode}       	= $problemEnviron{displayMode};
$problemEnviron{outputMode}         	= $problemEnviron{displayMode};

#hints,solutions
$problemEnviron{displayHintsQ}      	= "0";
$problemEnviron{displaySolutionsQ}  	= "0";

#tex
$problemEnviron{texDisposition}     	= "pdflatex"; # in webwork2, we use pdflatex


# External Programs
# ADDED: externalLaTeXPath, externalDvipngPath,
#        externalGif2EpsPath, externalPng2EpsPath

$problemEnviron{externalTTHPath}      	= $externalPrograms{tth};
$problemEnviron{externalLaTeXPath}    	= $externalPrograms{latex};
$problemEnviron{externalDvipngPath}   	= $externalPrograms{dvipng};
$problemEnviron{externalGif2EpsPath}  	= $externalPrograms{gif2eps};
$problemEnviron{externalPng2EpsPath}  	= $externalPrograms{png2eps};
$problemEnviron{externalGif2PngPath}  	= $externalPrograms{gif2png};
$problemEnviron{externalCheckUrl}     	= $externalPrograms{checkurl};

$problemEnviron{macrosPath}             = $pg{directories}{macrosPath};
$problemEnviron{appletPath}             = $pg{directories}{appletPath};
$problemEnviron{pgDirectories}          = $pg{directories};

$problemEnviron{scriptDirectory}        = undef;
$problemEnviron{webworkDocsURL}         = $problemServerURLs{docs}."/";
$problemEnviron{localHelpURL}           = $problemServerURLs{local_help}."/";

#Configuration of different Modes
$problemEnviron{jsMathURL}              = $problemServerURLs{jsMath};
$problemEnviron{asciimathURL}	        = $problemServerURLs{asciimath};
$problemEnviron{LaTeXMathMLURL}	        = $problemServerURLs{LaTeXMathML};


#Default answers to fill blanks with.
my $ansEvalDefaults = $pg{ansEvalDefaults};
$problemEnviron{$_} = $ansEvalDefaults->{$_} foreach (keys %$ansEvalDefaults);

$problemEnviron{jsMath} = {%{$pg{displayModeOptions}{jsMath}}};

# Other things...
$problemEnviron{QUIZ_PREFIX}              = "0";
$problemEnviron{PROBLEM_GRADER_TO_USE}    = $pg{options}{grader};
$problemEnviron{PRINT_FILE_NAMES_FOR}     = $pg{specialPGEnvironmentVars}{PRINT_FILE_NAMES_FOR};

#  ADDED: __files__
#    an array for mapping (eval nnn) to filenames in error messages
$problemEnviron{__files__} = {
      root => $serverEnviron->{problemServerDirs}{root},     # used to shorten filenames
      pg   => $serverEnviron->{pg}{directories}{root}, # ditto
      tmpl => $serverEnviron->{courseDirs}{templates}, # ditto
    };

# variables for interpreting capa problems and other things to be
# seen in a pg file
my $specialPGEnvironmentVarHash = $pg{specialPGEnvironmentVars};
	for my $SPGEV (keys %{$specialPGEnvironmentVarHash}) {
		$problemEnviron{$SPGEV} = $specialPGEnvironmentVarHash->{$SPGEV};
	}
